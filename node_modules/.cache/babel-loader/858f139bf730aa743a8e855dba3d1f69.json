{"ast":null,"code":"var _jsxFileName = \"/Users/Kahil/Desktop/sei/drumdrum/src/components/Am/Am.js\";\nimport React, { Component } from 'react';\nimport Tone from 'tone';\nimport AmSlider from './AmSlider';\nimport { Button } from 'semantic-ui-react';\n\nclass Am extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      let counter = 0;\n      let amSynth = new Tone.AMSynth({\n        harmonicity: 5 / 1,\n        detune: 0,\n        oscillator: {\n          type: \"sine\"\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.01,\n          sustain: 1,\n          release: 0.5\n        },\n        modulation: {\n          type: \"square\"\n        },\n        modulationEnvelope: {\n          attack: 0.5,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      }).toMaster();\n      let fmSynth = new Tone.FMSynth({\n        harmonicity: 1.1,\n        // mod synth / carier synth\n        modulationIndex: 20,\n        detune: 0,\n        oscillator: {\n          type: \"sine\"\n        },\n        envelope: {\n          attack: 0.01,\n          decay: 0.01,\n          sustain: 1,\n          release: 0.5\n        },\n        modulation: {\n          type: \"square\"\n        },\n        modulationEnvelope: {\n          attack: 0.5,\n          decay: 0,\n          sustain: 1,\n          release: 0.5\n        }\n      }).toMaster();\n      let loopBeat = new Tone.Loop(time => {\n        if (counter % 2 === 0) {\n          amSynth.triggerAttackRelease(\"A2\", \"8n\", time, 1);\n        }\n\n        if (counter % 2 === 0) {\n          amSynth.triggerAttackRelease(\"C2\", \"16n\", time, 1);\n        }\n\n        if (counter % 4 === 0) {\n          amSynth.triggerAttackRelease(\"B2\", \"1m\", time, 1);\n        }\n\n        counter = (counter + 1) % 16;\n      });\n      Tone.Transport.start(0);\n      loopBeat.start(0);\n      Tone.Transport.bpm.value = this.props.AmState;\n    };\n\n    this.stop = () => {\n      Tone.Transport.stop();\n    };\n\n    this.render = () => {\n      console.log(this.props.AmState);\n      const isPlaying = this.state.isPLaying;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Button, {\n        inverted: true,\n        color: \"green\",\n        onClick: this.start,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Am\"), React.createElement(Button, {\n        inverted: true,\n        color: \"green\",\n        onClick: this.stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"stop\"));\n    };\n\n    this.state = {\n      soundName: 'Am'\n    };\n    console.log(this.props);\n  }\n\n}\n\nexport default Am;","map":{"version":3,"sources":["/Users/Kahil/Desktop/sei/drumdrum/src/components/Am/Am.js"],"names":["React","Component","Tone","AmSlider","Button","Am","constructor","props","start","counter","amSynth","AMSynth","harmonicity","detune","oscillator","type","envelope","attack","decay","sustain","release","modulation","modulationEnvelope","toMaster","fmSynth","FMSynth","modulationIndex","loopBeat","Loop","time","triggerAttackRelease","Transport","bpm","value","AmState","stop","render","console","log","isPlaying","state","isPLaying","soundName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tone from 'tone'\nimport AmSlider from './AmSlider'\nimport { Button } from 'semantic-ui-react'\n\n\n\nclass Am extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            soundName: 'Am'\n\n        }\n\n        console.log(this.props)\n\n    }\n    start = () => {\n        let counter = 0\n        let amSynth = new Tone.AMSynth({\n            harmonicity: 5 / 1,\n            detune: 0,\n            oscillator: {\n                type: \"sine\"\n            },\n            envelope: {\n                attack: 0.01,\n                decay: 0.01,\n                sustain: 1,\n                release: 0.5\n            },\n            modulation: {\n                type: \"square\"\n            },\n            modulationEnvelope: {\n                attack: 0.5,\n                decay: 0,\n                sustain: 1,\n                release: 0.5\n            }\n        }\n        ).toMaster()\n\n\n        let fmSynth = new Tone.FMSynth({\n            harmonicity: 1.1, // mod synth / carier synth\n            modulationIndex: 20,\n            detune: 0,\n            oscillator: {\n                type: \"sine\"\n            },\n            envelope: {\n                attack: 0.01,\n                decay: 0.01,\n                sustain: 1,\n                release: 0.5\n            },\n            modulation: {\n                type: \"square\"\n            },\n            modulationEnvelope: {\n                attack: 0.5,\n                decay: 0,\n                sustain: 1,\n                release: 0.5\n            }\n        }\n        ).toMaster()\n\n\n\n\n\n        let loopBeat = new Tone.Loop((time) => {\n            if (counter % 2 === 0) {\n                amSynth.triggerAttackRelease(\"A2\", \"8n\", time, 1)\n\n            }\n            if (counter % 2 === 0) {\n                amSynth.triggerAttackRelease(\"C2\", \"16n\", time, 1)\n\n            }\n            if (counter % 4 === 0) {\n                amSynth.triggerAttackRelease(\"B2\", \"1m\", time, 1)\n            }\n            counter = (counter + 1) % 16\n        })\n\n        Tone.Transport.start(0);\n\n        loopBeat.start(0)\n        Tone.Transport.bpm.value = this.props.AmState\n    }\n\n    stop = () => {\n        Tone.Transport.stop()\n    }\n\n    render = () => {\n        console.log(this.props.AmState)\n\n        const isPlaying = this.state.isPLaying\n        return (\n            <div>\n                <Button inverted color=\"green\"\n                    onClick={this.start}>Am</Button>\n\n                <Button inverted color=\"green\"\n                    onClick={this.stop}>stop</Button>\n\n\n\n            </div>\n        );\n    }\n}\nexport default Am;"]},"metadata":{},"sourceType":"module"}