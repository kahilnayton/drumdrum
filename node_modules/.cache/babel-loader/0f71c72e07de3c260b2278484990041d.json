{"ast":null,"code":"var _jsxFileName = \"/Users/Kahil/Desktop/sei/drumdrum/client/src/components/Plucky/PluckySlider.js\";\nimport React, { Component } from 'react';\nimport { Button, Input, Segment, Icon } from 'semantic-ui-react';\nimport Plucky from './Plucky';\nexport default class PluckySlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (e, {\n      value\n    }) => this.setState({\n      pluckyState: value\n    });\n\n    this.handlePaginationChange = (e, {\n      pluckyState\n    }) => this.setState({\n      pluckyState\n    });\n\n    this.addSound = async () => {\n      // console.log('new sound', this.state.name, this.state.machineState)\n      console.log('new pluck', this.props.user);\n      const newSound = {\n        name: this.state.name,\n        setting: Number.parseInt(this.state.pluckyState)\n      };\n    };\n\n    this.state = {\n      name: 'Plucky',\n      pluckyState: 1,\n      userID: '',\n      loggedIn: true,\n      userInfo: 'userInfo'\n    };\n  }\n\n  render() {\n    const pluckyState = this.state.pluckyState;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Plucky, {\n      pluckyState: this.state.pluckyState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Pluck \", pluckyState), React.createElement(Input, {\n      min: 0,\n      max: 255,\n      onChange: this.handleInputChange,\n      type: \"range\",\n      value: pluckyState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Kahil/Desktop/sei/drumdrum/client/src/components/Plucky/PluckySlider.js"],"names":["React","Component","Button","Input","Segment","Icon","Plucky","PluckySlider","constructor","props","handleInputChange","e","value","setState","pluckyState","handlePaginationChange","addSound","console","log","user","newSound","name","state","setting","Number","parseInt","userID","loggedIn","userInfo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAClDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAkB,KAAKC,QAAL,CAAc;AAAEC,MAAAA,WAAW,EAAEF;AAAf,KAAd,CAZnB;;AAAA,SAcnBG,sBAdmB,GAcM,CAACJ,CAAD,EAAI;AAAEG,MAAAA;AAAF,KAAJ,KAAwB,KAAKD,QAAL,CAAc;AAAEC,MAAAA;AAAF,KAAd,CAd9B;;AAAA,SAgBnBE,QAhBmB,GAgBR,YAAY;AACrB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKT,KAAL,CAAWU,IAApC;AACA,YAAMC,QAAQ,GAAG;AACfC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADF;AAEfE,QAAAA,OAAO,EAAEC,MAAM,CAACC,QAAP,CAAgB,KAAKH,KAAL,CAAWR,WAA3B;AAFM,OAAjB;AAID,KAvBkB;;AAEjB,SAAKQ,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,QADK;AAEXP,MAAAA,WAAW,EAAE,CAFF;AAGXY,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,QAAQ,EAAE,IAJC;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAgBDC,EAAAA,MAAM,GAAG;AAAA,UACCf,WADD,GACiB,KAAKQ,KADtB,CACCR,WADD;AAIP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWR,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYA,WAAZ,CAJF,EAKE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,GAAG,EAAE,GAFP;AAGE,MAAA,QAAQ,EAAE,KAAKJ,iBAHjB;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAEI,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAeD;;AA7CiD","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input, Segment, Icon } from 'semantic-ui-react'\nimport Plucky from './Plucky'\n\nexport default class PluckySlider extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: 'Plucky',\n      pluckyState: 1,\n      userID: '',\n      loggedIn: true,\n      userInfo: 'userInfo'\n    }\n  }\n\n\n  handleInputChange = (e, { value }) => this.setState({ pluckyState: value })\n\n  handlePaginationChange = (e, { pluckyState }) => this.setState({ pluckyState })\n\n  addSound = async () => {\n    // console.log('new sound', this.state.name, this.state.machineState)\n    console.log('new pluck', this.props.user)\n    const newSound = {\n      name: this.state.name,\n      setting: Number.parseInt(this.state.pluckyState),\n    }\n  }\n\n  render() {\n    const { pluckyState } = this.state\n\n\n    return (\n      <React.Fragment>\n\n        <Plucky\n          pluckyState={this.state.pluckyState} />\n        <div>Pluck {pluckyState}</div>\n        <Input\n          min={0}\n          max={255}\n          onChange={this.handleInputChange}\n          type='range'\n          value={pluckyState}\n        />\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}