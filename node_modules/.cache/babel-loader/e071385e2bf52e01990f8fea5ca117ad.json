{"ast":null,"code":"var _jsxFileName = \"/Users/Kahil/Desktop/sei/drumdrum/client/src/components/Poly/PolyMachine.js\";\nimport React, { Component } from 'react';\nimport Tone from 'tone';\nimport Slider from './PolySlider';\nimport { Button, Checkbox, Form, Divider, Grid, Segment } from 'semantic-ui-react';\n\nclass PolyMachine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      let counter = 0;\n      Tone.start();\n      let poly = new Tone.PolySynth({\n        \"oscillator\": {\n          \"type\": \"pwm\",\n          \"modulationFrequency\": 1\n        },\n        \"envelope\": {\n          \"attack\": 1,\n          \"decay\": 0.1,\n          \"sustain\": 0.2,\n          \"release\": 0.1\n        }\n      }).toMaster();\n      let loopBeat = new Tone.Loop(time => {\n        if (counter % 2 === 0) {\n          poly.triggerAttackRelease(\"D3\", \"8n\", time, 1);\n        }\n\n        counter = (counter + 1) % 16;\n      });\n      Tone.Transport.start(0);\n      loopBeat.start(0);\n      Tone.Transport.bpm.value = 100;\n    };\n\n    this.stop = () => {\n      Tone.Transport.stop();\n    };\n\n    this.render = () => {\n      console.log(this.props.polyState);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        inverted: true,\n        color: \"green\",\n        onClick: this.start,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"PolySynth\"), React.createElement(Button, {\n        inverted: true,\n        color: \"green\",\n        onClick: this.stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"stop\"));\n    };\n\n    this.state = {\n      synth: null,\n      isPlaying: false\n    };\n  }\n\n}\n\nexport default PolyMachine;","map":{"version":3,"sources":["/Users/Kahil/Desktop/sei/drumdrum/client/src/components/Poly/PolyMachine.js"],"names":["React","Component","Tone","Slider","Button","Checkbox","Form","Divider","Grid","Segment","PolyMachine","constructor","props","start","counter","poly","PolySynth","toMaster","loopBeat","Loop","time","triggerAttackRelease","Transport","bpm","value","stop","render","console","log","polyState","state","synth","isPlaying"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,OAAhD,QAA+D,mBAA/D;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAChCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,KARmB,GAQX,MAAM;AACV,UAAIC,OAAO,GAAG,CAAd;AACAZ,MAAAA,IAAI,CAACW,KAAL;AACA,UAAIE,IAAI,GAAG,IAAIb,IAAI,CAACc,SAAT,CAAmB;AAC1B,sBAAc;AACV,kBAAQ,KADE;AAEV,iCAAuB;AAFb,SADY;AAK1B,oBAAY;AACR,oBAAU,CADF;AAER,mBAAS,GAFD;AAGR,qBAAW,GAHH;AAIR,qBAAW;AAJH;AALc,OAAnB,EAYRC,QAZQ,EAAX;AAcA,UAAIC,QAAQ,GAAG,IAAIhB,IAAI,CAACiB,IAAT,CAAeC,IAAD,IAAU;AACnC,YAAIN,OAAO,GAAG,CAAV,KAAgB,CAApB,EAAuB;AACnBC,UAAAA,IAAI,CAACM,oBAAL,CAA0B,IAA1B,EAAgC,IAAhC,EAAsCD,IAAtC,EAA4C,CAA5C;AAEH;;AACDN,QAAAA,OAAO,GAAG,CAACA,OAAO,GAAG,CAAX,IAAgB,EAA1B;AACH,OANc,CAAf;AAOAZ,MAAAA,IAAI,CAACoB,SAAL,CAAeT,KAAf,CAAqB,CAArB;AACAK,MAAAA,QAAQ,CAACL,KAAT,CAAe,CAAf;AACAX,MAAAA,IAAI,CAACoB,SAAL,CAAeC,GAAf,CAAmBC,KAAnB,GAA2B,GAA3B;AAGH,KArCkB;;AAAA,SAuCnBC,IAvCmB,GAuCZ,MAAM;AACTvB,MAAAA,IAAI,CAACoB,SAAL,CAAeG,IAAf;AACH,KAzCkB;;AAAA,SA4CnBC,MA5CmB,GA4CV,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWiB,SAAvB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,KAAK,EAAC,OAAvB;AACI,QAAA,OAAO,EAAE,KAAKhB,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,KAAK,EAAC,OAAvB;AACI,QAAA,OAAO,EAAE,KAAKY,IADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAUH,KAxDkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAP+B;;AA4DpC,eAAetB,WAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport Tone from 'tone';\nimport Slider from './PolySlider'\nimport { Button, Checkbox, Form, Divider, Grid, Segment } from 'semantic-ui-react'\n\nclass PolyMachine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synth: null,\n            isPlaying: false\n        }\n    }\n\n    start = () => {\n        let counter = 0\n        Tone.start();\n        let poly = new Tone.PolySynth({\n            \"oscillator\": {\n                \"type\": \"pwm\",\n                \"modulationFrequency\": 1\n            },\n            \"envelope\": {\n                \"attack\": 1,\n                \"decay\": 0.1,\n                \"sustain\": 0.2,\n                \"release\": 0.1,\n            },\n\n        }).toMaster();\n\n        let loopBeat = new Tone.Loop((time) => {\n            if (counter % 2 === 0) {\n                poly.triggerAttackRelease(\"D3\", \"8n\", time, 1)\n\n            }\n            counter = (counter + 1) % 16\n        })\n        Tone.Transport.start(0);\n        loopBeat.start(0)\n        Tone.Transport.bpm.value = 100\n\n\n    }\n\n    stop = () => {\n        Tone.Transport.stop()\n    }\n\n\n    render = () => {\n        console.log(this.props.polyState)\n        return (\n            <div className=\"App\">\n                <Button inverted color=\"green\"\n                    onClick={this.start}>PolySynth</Button>\n\n                <Button inverted color=\"green\"\n                    onClick={this.stop}>stop</Button>\n\n            </div>\n        );\n    }\n}\n\nexport default PolyMachine;"]},"metadata":{},"sourceType":"module"}